---

# Archive Docker Image
- name: Extract Docker Image
  hosts: localhost
  tasks:
    - name: Archive docker image
      docker_image:
        name: "digital-sky-api"
        tag: "1.0"
        archive_path: "/tmp/digital-sky-1.0.-di.tar"
      when: archive_docker_image

# Deploy API service
- name: Deploy server
  hosts: digital_sky_api_hosts
  user: "core"
  gather_facts: True
  tasks:

    - name: Create service directory
      file:
        path: "{{services_root_directory}}/{{service_name}}"
        state: directory
        mode: 0755

    - name: Copy image to server
      copy:
        src: "/tmp/{{image_name}}-{{artifact_version}}-di.tar"
        dest: "{{services_root_directory}}/{{service_name}}/{{image_name}}-{{artifact_version}}-di.tar"
      when: archive_docker_image

    - name: Load image from archive
      docker_image:
        name: "{{image_name}}"
        tag: "{{artifact_version}}"
        load_path: "{{services_root_directory}}/{{service_name}}/{{image_name}}-{{artifact_version}}-di.tar"
      when: archive_docker_image

    - name: Remove image archive
      file:
        path: "{{services_root_directory}}/{{service_name}}/{{image_name}}-{{artifact_version}}-di.tar"
        state: absent
      when: archive_docker_image

    - name: Resolve env properties
      template:
        src: "{{service_name}}-env-properties.j2"
        dest: "{{services_root_directory}}/{{service_name}}/env-properties.txt"
        mode: 0644
        force: yes

    - name: Create service data directory
      file:
        path: "{{services_root_directory}}/{{service_name}}/data"
        state: directory
        mode: 0755

    - name: Re-create service container
      docker_container:
        name: "{{service_name}}"
        image: "{{image_name}}:{{artifact_version}}"
        env_file: "{{services_root_directory}}/{{service_name}}/env-properties.txt"
        state: started
        recreate: yes
        volumes:
          - "{{services_root_directory}}/{{service_name}}/data:/data"
          - "{{certs_root_directory}}:/certs"
        published_ports:
          - "{{service_host_port}}:{{service_container_port}}"

